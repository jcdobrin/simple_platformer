/*! minimalist-platformer 2019-07-26 */
function normalize(a){var b=[0,0],c=Math.sqrt(a[0]*a[0]+a[1]*a[1]);return b[0]=a[0]/c,b[1]=a[1]/c,b}function inner(a,b){return a[0]*b[0]+a[1]*b[1]}function translatePoint(a,b,c){return[a[0]+b,a[1]+c]}function subtractVal(a,b){return[a[0]-b,a[1]-b]}function subtract(a,b){return[a[0]-b[0],a[1]-b[1]]}function add(a,b){return[a[0]+b[0],a[1]+b[1]]}function multiply(a,b){return[a[0]*b,a[1]*b]}function hadamard(a,b){return[a[0]*b[0],a[1]*b[1]]}function normalVector(a){return[-a[1],a[0]]}function rotatePoint(a,b){return[a[0]*Math.cos(b)+a[1]*Math.sin(b),a[1]*Math.cos(b)-a[0]*Math.sin(b)]}function handleInputs(){Inputs.start>0&&(Inputs.skipTraining&&(Game.CurrentLevel=13,initializeLevel(Game,Game.CurrentLevel)),Inputs.start=0,Game.time=0,Game.started=1,InitAudio(),StartAudioMusic(),GameLoop(),document.getElementById("instructions").remove(),document.getElementById("header").style.display="block"),Inputs.restart&&(resetGame(),Inputs.restart=!1),Inputs.skipLevel&&1==Game.started&&(Inputs.skipLevel=0,setLevel(++Game.CurrentLevel))}function initInputs(){window.addEventListener("gamepadconnected",function(a){gp=navigator.getGamepads()[a.gamepad.index],console.log("Gamepad connected at index %d: %s. %d buttons, %d axes.",a.gamepad.index,a.gamepad.id,a.gamepad.buttons.length,a.gamepad.axes.length)}),window.addEventListener("gamepaddisconnected",function(a){console.log("Gamepad disconnected from index %d: %s",a.gamepad.index,a.gamepad.id)}),document.addEventListener("keydown",function(a){switch(Inputs.amount=1,a.key){case"Shift":Inputs.running=!0;break;case"w":case"W":Inputs.jump=!0;break;case"ArrowRight":case"d":case"D":Inputs.forward=!0;break;case"ArrowLeft":case"a":case"A":Inputs.back=!0;break;case" ":Inputs.jump=!0;break;case"m":case"M":Game.MusicInterval?StopAudioMusic():StartAudioMusic();break;case"p":case"P":Inputs.start<0?(Inputs.start=1,Inputs.skipTraining=!0,handleInputs()):setPaused();break;case"Enter":Inputs.start<0?(Inputs.start=1,handleInputs()):Inputs.restart=!0}}),document.addEventListener("keyup",function(a){switch(a.key){case"Shift":Inputs.running=!0;break;case"w":case"W":Inputs.jump=!1;break;case"ArrowRight":case"d":case"D":Inputs.forward=!1;break;case"ArrowLeft":case"a":case"A":Inputs.back=!1;break;case" ":Inputs.jump=!1;break;case"Enter":Inputs.restart=!1;break;case"f":break;case"n":case"N":Inputs.skipLevel=!0}})}function RGB2HexColor(a){var b=parseInt(255*a[0]).toString(16).padStart(2,"0")+parseInt(255*a[1]).toString(16).padStart(2,"0")+parseInt(255*a[2]).toString(16).padStart(2,"0");return b="#"+b}function renderFadeCanvas(a,b){Game.context.globalAlpha=a,Game.context.save(),Game.context.beginPath(),Game.context.fillStyle="#000",Game.context.rect(0,0,Game.width,Game.height),Game.context.fill(),Game.context.closePath(),Game.context.restore(),Game.context.globalAlpha=1}function drawSimpleSquare(a,b,c,d){var e=a[0]+d[0],f=a[1]+d[1];c.beginPath(),c.rect(e*Game.MetersToPixels,f*Game.MetersToPixels,b[0]*Game.MetersToPixels,b[1]*Game.MetersToPixels),c.fill(),c.closePath()}function drawSquare(a,b,c,d,e){e.rect(a*Game.MetersToPixels,b*Game.MetersToPixels,c*Game.MetersToPixels,d*Game.MetersToPixels)}function lineFromPoints(a,b,c){void 0==c&&(c=1),a.moveTo(b[0][0]*c,b[0][1]*c);for(var d=1;d<b.length;d++)a.lineTo(b[d][0]*c,b[d][1]*c);a.stroke()}function createLineFromPoints(a,b,c){return[[b[0],b[1]],[c[0],c[1]]]}function renderEntity(a,b){if(a.alive||void 0===a.alive){var c=[a.position[0],a.position[1]],d=add([50,25],multiply(Game.player.position,-1));if(d=[0,0],Game.player.position[1]<25&&(d[1]=0),a.position=add(d,a.position),a.pieces)for(var e in a.pieces){var f=a.pieces[e],g=getRenderColor(f.color);b.strokeStyle=RGB2HexColor(g),b.fillStyle=RGB2HexColor(g),b.globalAlpha=g[3],drawSimpleSquare(a.position,f.dimension,b,f.offset)}a.position=c}}function OpenGLSquare(a,b,c){return[a[0]+b,a[1],a[0],a[1],a[0]+b,a[1]+c,a[0],a[1]+c]}function OpenGLSquareTriangle(a,b,c){return[a[0],a[1],a[0]+b,a[1],a[0]+b,a[1]+c,a[0],a[1],a[0],a[1]+c,a[0]+b,a[1]+c]}function OpenGLSquareLine(a,b,c){return[a[0],a[1],a[0]+b,a[1],a[0]+b,a[1]+c,a[0],a[1]+c]}function initOpenGL(){gl.viewport(0,0,Game.canvas.width,Game.canvas.height),gl.clearColor(0,0,0,1),gl.clear(gl.DEPTH_BUFFER_BIT|gl.COLOR_BUFFER_BIT),gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA),gl.blendFunc(gl.ONE,gl.ONE_MINUS_SRC_ALPHA),gl.enable(gl.BLEND),gl.disable(gl.DEPTH_TEST);var a=document.getElementById("vertex").firstChild.nodeValue,b=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(b,a),gl.compileShader(b);var c=document.getElementById("fragment").firstChild.nodeValue,d=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(d,c),gl.compileShader(d),Game.programBase=gl.createProgram(),Game.programBase.title="Base",gl.attachShader(Game.programBase,b),gl.attachShader(Game.programBase,d),gl.linkProgram(Game.programBase),gl.getShaderParameter(b,gl.COMPILE_STATUS)||console.log(gl.getShaderInfoLog(b)),gl.getShaderParameter(d,gl.COMPILE_STATUS)||console.log(gl.getShaderInfoLog(d)),gl.getProgramParameter(Game.programBase,gl.LINK_STATUS)||console.log(gl.getProgramInfoLog(Game.programBase)),gl.useProgram(Game.programBase),a=document.getElementById("vertexUV").firstChild.nodeValue,b=gl.createShader(gl.VERTEX_SHADER),gl.shaderSource(b,a),gl.compileShader(b),c=document.getElementById("fragmentUV").firstChild.nodeValue,d=gl.createShader(gl.FRAGMENT_SHADER),gl.shaderSource(d,c),gl.compileShader(d),Game.programUV=gl.createProgram(),Game.programUV.title="UV",gl.attachShader(Game.programUV,b),gl.attachShader(Game.programUV,d),gl.linkProgram(Game.programUV),gl.getShaderParameter(b,gl.COMPILE_STATUS)||console.log(gl.getShaderInfoLog(b)),gl.getShaderParameter(d,gl.COMPILE_STATUS)||console.log(gl.getShaderInfoLog(d)),gl.getProgramParameter(Game.programUV,gl.LINK_STATUS)||console.log(gl.getProgramInfoLog(Game.programUV)),Game.program=Game.programBase}function renderFadeOpenGl(a,b){for(var c=OpenGLSquare([0,0],Game.width,Game.height),d=[0,0,0,a],e=[],f=0;f<c.length;f+=2)e=e.concat(c[f],c[f+1],d,[-1*Game.camera.translate[0],-1*Game.camera.translate[1],1]);gl.enable(gl.BLEND),OpenGlBufferRenderRaw(e,Game.FadeBuffer,4,gl.TRIANGLE_STRIP),gl.disable(gl.BLEND)}function createVertexBuffer(a,b){var c=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,c);var d=new Float32Array(a);return gl.bufferData(gl.ARRAY_BUFFER,d,gl.STATIC_DRAW),{vbuffer:c,itemSize:b,numItems:a.length/b}}function createPieceBuffer(a){var b=OpenGLSquare([0,0],a.dimension[0],a.dimension[1]);a.buffer=createVertexBuffer(b,2)}function createCollisionVolumeBuffer(a){var b=OpenGLSquareLine([0,0],a.dimension[0],a.dimension[1]);a.buffer=createVertexBuffer(b,2)}function OpenGlBufferRenderTriangleStrip(a,b,c){OpenGlBufferRender(a,b,c,gl.TRIANGLE_STRIP)}function OpenGlBufferRenderTriangle(a,b,c){OpenGlBufferRender(a,b,c,gl.TRIANGLES)}function OpenGlBufferRenderLine(a,b,c){OpenGlBufferRender(a,b,c,gl.LINE_LOOP)}function OpenGlBufferRender(a,b,c,d){var e=16/Game.camera.scale,f=9/Game.camera.scale,g=[f,0,0,0,0,e,0,0,0,0,1,0,-1,-1,0,1];b.vbuffer?(gl.bindBuffer(gl.ARRAY_BUFFER,b.vbuffer),Game.program.aColor=gl.getAttribLocation(Game.program,"aColor"),gl.enableVertexAttribArray(Game.program.aColor),gl.vertexAttribPointer(Game.program.aColor,4,gl.FLOAT,!1,0,0),gl.uniform1i(gl.getUniformLocation(Game.program,"useVColor"),!0),Game.program.uColor=gl.getUniformLocation(Game.program,"uColor"),gl.uniform4fv(program.uColor,new Float32Array([0,0,0,1]))):(Game.program.uColor=gl.getUniformLocation(Game.program,"uColor"),gl.uniform4fv(Game.program.uColor,new Float32Array(b)),gl.uniform1i(gl.getUniformLocation(Game.program,"useVColor"),!1)),gl.bindBuffer(gl.ARRAY_BUFFER,a.vbuffer),Game.program.pMatrix=gl.getUniformLocation(Game.program,"pMatrix"),gl.uniformMatrix4fv(program.pMatrix,!1,g),Game.program.entityPosition=gl.getUniformLocation(Game.program,"entityPosition"),gl.uniform2fv(program.entityPosition,c),Game.program.aVertexPosition=gl.getAttribLocation(Game.program,"aVertexPosition"),gl.enableVertexAttribArray(Game.program.aVertexPosition),gl.vertexAttribPointer(Game.program.aVertexPosition,a.itemSize,gl.FLOAT,!1,0,0),gl.drawArrays(d,0,a.numItems)}function OpenGlBufferRenderRaw(a,b,c,d){var e=4,f=16/Game.camera.scale,g=9/Game.camera.scale,h=[g,0,0,0,0,f,0,0,0,0,1,0,-1,-1,0,1];gl.bindBuffer(gl.ARRAY_BUFFER,b),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(a),gl.STATIC_DRAW),Game.program.aColor=gl.getAttribLocation(Game.program,"aColor"),Game.program.aVertexPosition=gl.getAttribLocation(Game.program,"aVertexPosition"),Game.program.aEntityPosition=gl.getAttribLocation(Game.program,"aEntityPosition"),gl.enableVertexAttribArray(Game.program.aColor),gl.enableVertexAttribArray(Game.program.aVertexPosition),gl.enableVertexAttribArray(Game.program.aEntityPosition),gl.vertexAttribPointer(Game.program.aVertexPosition,2,gl.FLOAT,!1,9*e,0),gl.vertexAttribPointer(Game.program.aColor,4,gl.FLOAT,!1,9*e,2*e),gl.vertexAttribPointer(Game.program.aEntityPosition,3,gl.FLOAT,!1,9*e,6*e),Game.program.pMatrix=gl.getUniformLocation(Game.program,"pMatrix"),Game.program.pCamera=gl.getUniformLocation(Game.program,"pCamera"),gl.uniformMatrix4fv(Game.program.pMatrix,!1,h),gl.uniform2fv(Game.program.pCamera,new Float32Array(Game.camera.translate));for(var i=0;i<c;i+=4)gl.drawArrays(d,i,4)}function OpenGlBufferRenderRawUV(a,b,c,d){var e=4,f=16/Game.camera.scale,g=9/Game.camera.scale,h=[g,0,0,0,0,f,0,0,0,0,1,0,-1,-1,0,1];gl.bindBuffer(gl.ARRAY_BUFFER,b),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(a),gl.STATIC_DRAW),Game.program.aColor=gl.getAttribLocation(Game.program,"aColor"),Game.program.aVertexPosition=gl.getAttribLocation(Game.program,"aVertexPosition"),Game.program.aUVPosition=gl.getAttribLocation(Game.program,"aUVPosition"),Game.program.aEntityPosition=gl.getAttribLocation(Game.program,"aEntityPosition"),gl.enableVertexAttribArray(Game.program.aColor),gl.enableVertexAttribArray(Game.program.aVertexPosition),gl.enableVertexAttribArray(Game.program.aUVPosition),gl.enableVertexAttribArray(Game.program.aEntityPosition),gl.vertexAttribPointer(Game.program.aVertexPosition,2,gl.FLOAT,!1,11*e,0),gl.vertexAttribPointer(Game.program.aUVPosition,2,gl.FLOAT,!1,11*e,2*e),gl.vertexAttribPointer(Game.program.aColor,4,gl.FLOAT,!1,11*e,4*e),gl.vertexAttribPointer(Game.program.aEntityPosition,3,gl.FLOAT,!1,11*e,8*e),Game.program.pMatrix=gl.getUniformLocation(Game.program,"pMatrix"),Game.program.pCamera=gl.getUniformLocation(Game.program,"pCamera"),gl.uniformMatrix4fv(Game.program.pMatrix,!1,h),gl.uniform2fv(Game.program.pCamera,new Float32Array(Game.camera.translate));for(var i=0;i<c;i+=4)gl.drawArrays(d,i,4)}function OpenGlBufferRenderPreBind(a,b,c){var d=4,e=16/Game.camera.scale,f=9/Game.camera.scale,g=[f,0,0,0,0,e,0,0,0,0,1,0,-1,-1,0,1];gl.bindBuffer(gl.ARRAY_BUFFER,a),Game.program.aColor=gl.getAttribLocation(Game.program,"aColor"),Game.program.aVertexPosition=gl.getAttribLocation(Game.program,"aVertexPosition"),Game.program.aEntityPosition=gl.getAttribLocation(Game.program,"aEntityPosition"),gl.enableVertexAttribArray(Game.program.aColor),gl.enableVertexAttribArray(Game.program.aVertexPosition),gl.enableVertexAttribArray(Game.program.aEntityPosition),gl.vertexAttribPointer(Game.program.aVertexPosition,2,gl.FLOAT,!1,9*d,0),gl.vertexAttribPointer(Game.program.aColor,4,gl.FLOAT,!1,9*d,2*d),gl.vertexAttribPointer(Game.program.aEntityPosition,3,gl.FLOAT,!1,9*d,6*d),Game.program.pMatrix=gl.getUniformLocation(Game.program,"pMatrix"),Game.program.pCamera=gl.getUniformLocation(Game.program,"pCamera"),gl.uniformMatrix4fv(Game.program.pMatrix,!1,g),gl.uniform2fv(Game.program.pCamera,new Float32Array(Game.camera.translate)),gl.drawArrays(c,0,b)}function OpenGlRenderEffects(a,b,c){if(b.effects&&b.effects&(RENDER_EFFECTS.TRAIL|RENDER_EFFECTS.VELOCITY_TRAIL))for(var d=b.trail.length-1;d>=0;d--){var e=add(b.trail[d],Game.camera.translate);c[3]=d/b.trail.length,OpenGlBufferRenderTriangleStrip(b.buffer,c,e)}}function renderEntityOpenGL(a,b){if(BEGIN_TIMED_FUNCTION(),a&&(a.alive||void 0===a.alive)&&a.pieces)for(var c=0;c<a.pieces.length;c++){var d=a.pieces[c],e=d.staticColor||getRenderColor(d.color);gl.enable(gl.BLEND),d.triangle?OpenGlBufferRenderTriangle(d.buffer,d.colorBuffer,add(Game.camera.translate,add(a.position,d.offset))):OpenGlBufferRenderTriangleStrip(d.buffer,e,add(Game.camera.translate,add(a.position,d.offset))),OpenGlRenderEffects(a,d,e),gl.disable(gl.BLEND)}END_TIMED_FUNCTION()}function OpenGlBufferEffects(a,b,c,d,e){if(a.effects&&a.effects&(RENDER_EFFECTS.TRAIL|RENDER_EFFECTS.VELOCITY_TRAIL))for(var f=a.trail.length-1;f>=0;f--){d[3]=f/a.trail.length;for(var g=0;g<c.length;g+=2)e.push(c[g]),e.push(c[g+1]),e.push(d[0]),e.push(d[1]),e.push(d[2]),e.push(d[3]),e.push(a.trail[f][0]),e.push(a.trail[f][1]),e.push(1)}}function bufferEntityOpenGL(a,b){if(BEGIN_TIMED_FUNCTION(),a&&(a.alive||void 0===a.alive)&&a.pieces)for(var c=0;c<a.pieces.length;c++){for(var d=a.pieces[c],e=d.staticColor||getRenderColor(d.color),f=OpenGLSquare(d.offset,d.dimension[0],d.dimension[1]),g=0;g<f.length;g+=2)b.push(f[g]),b.push(f[g+1]),b.push(e[0]),b.push(e[1]),b.push(e[2]),b.push(e[3]),b.push(a.position[0]),b.push(a.position[1]),b.push(1);OpenGlBufferEffects(d,a,f,e,b)}END_TIMED_FUNCTION()}function renderEntityDebugOpenGL(a,b){if(BEGIN_TIMED_FUNCTION(),(a.alive||void 0===a.alive)&&a.volumes)for(var c=0;c<a.volumes.length;c++)OpenGlBufferRenderLine(a.volumes[c].buffer,[1,1,0,1],add(Game.camera.translate,add(a.position,a.volumes[c].offset)));END_TIMED_FUNCTION()}function PlaySound(a,b){EffectsQueue.push({file:SoundEffects[a],volume:b})}function PlaySoundFromQueue(a){var b=new Audio(a.file);b.volume=a.volume,b.playbackRate=2,b.play()}function PlayQueue(){for(var a in EffectsQueue)PlaySoundFromQueue(EffectsQueue[a]);EffectsQueue=[]}function lineIntersection(a,b,c,d){var e,f,g=a[0],h=a[1],i=b[0],j=b[1],k=j-h,l=g-i,m=k*g+l*h,n=c[0],o=c[1],p=d[0],q=d[1],r=q-o,s=n-p,t=r*n+s*o,u=k*s-r*l;return 0==u||(e=(s*m-l*t)/u,f=(k*t-r*m)/u),e<=Math.max(g,i)&&e>=Math.min(g,i)&&e<=Math.max(n,p)&&e>=Math.min(n,p)&&f<=Math.max(h,j)&&f>=Math.min(h,j)&&f<=Math.max(o,q)&&f>=Math.min(o,q)?1:0}function distanceCollision(a,b,c,d){var e=a[0]-c[0],f=a[1]-c[1];return Math.pow(e,2)+Math.pow(f,2)<=Math.pow(b+d,2)}function AABB(a,b,c,d,e,f){return a[0]<d[0]+e&&a[0]+b>d[0]&&a[1]<d[1]+f&&a[1]+c>d[1]}function MinkoskiSweep(a,b,c,d,e,f,g){for(var h=add(c,f),i=add(a,multiply(c,.5)),j=add(d,multiply(f,.5)),k=add(j,multiply(h,-.5)),l=add(j,multiply(h,.5)),m=subtract(add(i,b),add(d,e)),n=[{X:k[0],RelX:m[0],RelY:m[1],DeltaX:i[0],DeltaY:i[1],MinY:k[1],MaxY:l[1],Normal:[-1,0]},{X:l[0],RelX:m[0],RelY:m[1],DeltaX:i[0],DeltaY:i[1],MinY:k[1],MaxY:l[1],Normal:[1,0]},{X:k[1],RelX:m[1],RelY:m[0],DeltaX:i[1],DeltaY:i[0],MinY:k[0],MaxY:l[0],Normal:[0,-1]},{X:l[1],RelX:m[1],RelY:m[0],DeltaX:i[1],DeltaY:i[0],MinY:k[0],MaxY:l[0],Normal:[0,1]}],o=g,p=!1,q=!1,r=0;r<n.length;++r){var s=n[r];if(0!=s.DeltaX){var t=(s.X-s.RelX)/s.DeltaX,u=s.RelY+t*s.DeltaY;if(o>t&&t>=0){u>=s.MinY&&u<=s.MaxY&&(o=Math.max(0,t-.1),q=s.Normal,p=!0)}}}return!!p&&{tMin:o,normal:q}}function PointInsideBox(a,b,c){var d=c[0],e=c[1];return!(d<a[0]||d>a[0]+b[0]||e<a[1]||e>a[1]+b[1])}function RayCast(a,b,c,d){return AABB(a[0],a[1][0]-a[0][0],a[1][1]-a[0][1],b,c,d)}function addCollisionVolumeByEntity(a){switch(a.type){case"Lava":addCollisionVolume(a,a.width,a.height,COLLISION.KILL);break;case"HSpring":addCollisionVolume(a,a.width,a.height,COLLISION.HSPRING);break;case"Spring":addCollisionVolume(a,a.width,a.height,COLLISION.VSPRING);break;default:addCollisionVolume(a,a.width,a.height,COLLISION.COLLIDES)}}function addCollisionVolume(a,b,c,d){void 0===a.volumes&&(a.volumes=[]);var e={dimension:[b,c],type:d,offset:[0,0]};return createCollisionVolumeBuffer(e),a.volumes.push(e),e}function getNextNodeIndex(a){a.current_node;return a.speed>0?a.current_node+1==a.nodes.length?a.loop?0:a.current_node-1:a.current_node+1:a.current_node-1<0?a.loop?a.nodes.length-1:a.current_node+1:a.current_node-1}function getNextNode(a){return a.nodes[getNextNodeIndex(a)]}function initializeNullEntity(a){return{type:"None",position:[0,0]}}function initializePath(a){a.type="Path",a.current_node=0,a.speed=a.speed||1,a.start_position=a.nodes[a.current_node].position,a.position=[a.start_position[0],a.start_position[1]];getNextNodeIndex(a);return a.end_position=getNextNode(a).position,a.loop=a.loop||!1,a}function initializeSquare(a,b,c,d,e){return{type:d,position:a,width:b,height:c,cycle:1,maxCycle:1,inc:-1,id:e||0}}function initializeFireWheel(a){for(var b=a.size||1,c=a.offset||0,d={type:"Rotate",position:add(a.position,[.5,.5]),length:a.length||2,angle:a.angle||0,speed:a.speed||0},e=1;e<a.length;e++){var f=addRenderPiece(d,"Kill",[b,b]),g=addCollisionVolume(d,b,b,COLLISION.KILL);f.distanceFromOrigin=b*e+c,g.distanceFromOrigin=b*e+c}return d}function initializeSpring(a){return{type:"Spring",position:a.position,width:5,height:1}}function drawSquare(a,b,c,d,e){e.rect(a*Game.MetersToPixels,b*Game.MetersToPixels,c*Game.MetersToPixels,d*Game.MetersToPixels)}function drawSpring(a,b){b.save(),b.beginPath(),b.strokeStyle="#AAA",b.fillStyle="#0F0",b.lineWidth=2,drawSquare(a.position[0]+a.width/4,a.position[1],a.width/2,a.height,b),b.fill(),b.stroke(),b.closePath(),b.beginPath(),drawSquare(a.position[0],a.position[1]+a.height-.5,a.width,a.height,b),b.fill(),b.stroke(),b.closePath(),b.restore()}function drawFloor(a,b){b.save(),b.beginPath(),b.strokeStyle="#AAA",b.fillStyle="#AAA",drawSimpleSquare(a,b),b.fill(),b.closePath(),b.restore()}function drawLava(a,b){a.cycle+=a.inc*Game.deltaTime/1e3,a.cycle<0&&a.inc<0&&(a.cycle=0,a.inc=1),a.cycle>a.maxCycle&&a.inc>0&&(a.cycle=a.maxCycle,a.inc=-1);var c=96-parseInt(96*a.cycle/a.maxCycle);b.save(),b.beginPath(),b.strokeStyle="#FF"+c.toString(16).padStart(2,"0")+"00",b.fillStyle="#FF"+c.toString(16).padStart(2,"0")+"00",drawSimpleSquare(a,b),b.fill(),b.closePath(),b.restore()}function drawSlime(a,b){b.save(),b.beginPath(),b.strokeStyle="#0C0",b.fillStyle="#0C0",drawSimpleSquare(a,b),b.globalAlpha=.75,b.fill(),b.stroke(),b.closePath(),b.globalAlpha=1,b.restore()}function drawFireWheel(a,b){b.save(),b.beginPath(),b.strokeStyle="#333",b.fillStyle="#333",drawSquare(a.position[0],a.position[1],1,1,b),b.fill(),b.closePath(),b.beginPath(),b.strokeStyle="#FFAA00",b.fillStyle="#FFAA00";for(var c=Math.sin(a.angle),d=Math.cos(a.angle),e=1;e<a.length;e++)drawSquare(a.position[0]+c*e,a.position[1]+d*e,1,1,b),b.fill();b.closePath(),b.restore()}function initializeDoor(a,b){return{type:"Door",position:a,locks:b,height:6,width:4}}function drawLocks(a,b){var c=.8,d=1,e=-d-.1,f=.1;b.save();for(var g=0;g<a.locks;g++)b.beginPath(),b.strokeStyle="#000",b.fillStyle="#777",b.rect((a.position[0]+f)*Game.MetersToPixels,(a.position[1]+a.height+e)*Game.MetersToPixels,c*Game.MetersToPixels,d*Game.MetersToPixels),b.fill(),b.stroke(),b.closePath(),b.beginPath(),b.strokeStyle="#000",b.fillStyle="#000",b.rect((a.position[0]+f+c/4)*Game.MetersToPixels,(a.position[1]+a.height+e+d/4)*Game.MetersToPixels,c/2*Game.MetersToPixels,d/2*Game.MetersToPixels),b.fill(),b.rect((a.position[0]+f+c/3)*Game.MetersToPixels,(a.position[1]+a.height+e+.1)*Game.MetersToPixels,c/4*Game.MetersToPixels,d/4*Game.MetersToPixels),b.fill(),b.closePath(),f+=c+.2,(g+1)%3==0&&(f=.1,e-=1.5*d);b.restore()}function drawDoor(a,b){b.save(),b.beginPath(),b.strokeStyle="#AAA",b.fillStyle="#AAA",b.rect(a.position[0]*Game.MetersToPixels,a.position[1]*Game.MetersToPixels,a.width*Game.MetersToPixels,a.height*Game.MetersToPixels),b.fill(),b.closePath();for(var c=0;c<a.width;c+=.75)b.beginPath(),b.strokeStyle="#000",b.fillStyle="#777",b.rect((a.position[0]+c)*Game.MetersToPixels,a.position[1]*Game.MetersToPixels,.25*Game.MetersToPixels,a.height*Game.MetersToPixels),b.fill(),b.stroke(),b.closePath();for(var c=0;c<a.height;c+=1.5)b.beginPath(),b.strokeStyle="#000",b.fillStyle="#777",b.rect(a.position[0]*Game.MetersToPixels,(a.position[1]+c)*Game.MetersToPixels,a.width*Game.MetersToPixels,.25*Game.MetersToPixels),b.fill(),b.stroke(),b.closePath();b.beginPath(),b.strokeStyle="#000",b.fillStyle="#777",b.rect(a.position[0]*Game.MetersToPixels,(a.position[1]+a.height)*Game.MetersToPixels,a.width*Game.MetersToPixels,.25*Game.MetersToPixels),b.fill(),b.stroke(),b.closePath(),b.restore(),drawLocks(a,b)}function initializePlayer(a){return{type:"Player",position:a,velocity:[0,0],speed:[0,0],rotation:0*Math.PI/180,radius:.6,jump:0,keys:0,trail:[],trailTime:.1}}function getPlayerRay(a){var b=[[a.position[0]+a.radius,a.position[1]+a.radius/2]];return a.velocity[0]>0?b[1]=[b[0][0]+a.radius+3*Game.PixelsToMeters,b[0][1]]:(b[1]=b[0],b[0]=[b[1][0]-a.radius-3*Game.PixelsToMeters,b[1][1]]),b}function drawPlayer(a,b){b.save(),b.strokeStyle="#0000FF",b.fillStyle="#0000FF";for(var c=0;c<a.trail.length;c++){var d=a.trail[c];b.globalAlpha=c/a.trail.length,b.beginPath(),b.rect(d[0]*Game.MetersToPixels,d[1]*Game.MetersToPixels,(a.radius+a.radius)*Game.MetersToPixels,(a.radius+a.radius)*Game.MetersToPixels),b.stroke(),b.fill(),b.closePath()}b.globalAlpha=1,b.beginPath(),b.rect(a.position[0]*Game.MetersToPixels,a.position[1]*Game.MetersToPixels,(a.radius+a.radius)*Game.MetersToPixels,(a.radius+a.radius)*Game.MetersToPixels),b.stroke(),b.fill(),b.closePath(),b.restore()}function jumpVel(a,b){return 2*a/b}function jumpGravity(a,b){return-2*a/(b*b)}function jumpHeight(a,b){return a*(b*b)/-2}function initializeKey(a){return{type:"Key",position:a,width:.5,height:.5,alive:1}}function drawKey(a,b){a.alive&&(b.save(),b.strokeStyle="#777",b.fillStyle="#777",b.beginPath(),b.rect((a.position[0]+1.9*a.width)*Game.MetersToPixels,(a.position[1]+a.height-a.height/4)*Game.MetersToPixels,.1*Game.MetersToPixels,-a.height*Game.MetersToPixels),b.rect((a.position[0]+1.5*a.width)*Game.MetersToPixels,(a.position[1]+a.height-a.height/4)*Game.MetersToPixels,.1*Game.MetersToPixels,-a.height*Game.MetersToPixels),b.fill(),b.closePath(),b.beginPath(),b.rect(a.position[0]*Game.MetersToPixels,(a.position[1]+a.height/4)*Game.MetersToPixels,2*a.width*Game.MetersToPixels,a.height/2*Game.MetersToPixels),b.fill(),b.closePath(),b.beginPath(),b.fillStyle="#000",b.rect(a.position[0]*Game.MetersToPixels,a.position[1]*Game.MetersToPixels,a.width*Game.MetersToPixels,a.height*Game.MetersToPixels),b.fill(),b.stroke(),b.stroke(),b.stroke(),b.closePath(),b.restore())}function initializeLevel(a,b){if(Levels[b]){if(a.level=Levels[b],a.LevelComplete=!1,a.entities=[],a.camera.settings=a.level.camera||{},!a.BackgroundBuffer){backgroundVerticies=[];for(var c=1,d=.5,e=-200;e<200;e+=1)for(var f=e*(c+.1),g=0;g<200;g+=1){var h=g*(d+.1);g%2?f+=c/2:f-=c/2;for(var i=OpenGLSquareTriangle([f,h],c,d),j=getRenderColor("BG"),k=0;k<i.length;k+=2)backgroundVerticies.push(i[k]),backgroundVerticies.push(i[k+1]),backgroundVerticies.push(j[0]),backgroundVerticies.push(j[1]),backgroundVerticies.push(j[2]),backgroundVerticies.push(j[3]),backgroundVerticies.push(0),backgroundVerticies.push(0),backgroundVerticies.push(1.15)}a.BackgroundBuffer=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,a.BackgroundBuffer),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(backgroundVerticies),gl.STATIC_DRAW),a.BackgroundBuffer.numItems=backgroundVerticies.length/9}a.door=initializeDoor([Levels[b].door.position[0],Levels[b].door.position[1]],Levels[b].door.locks),addRenderPiece(a.door,"Door",[a.door.width,a.door.height]),addCollisionVolume(a.door,a.door.width,a.door.height,COLLISION.INTERACT),a.entities.push(a.door),a.door.lockEntities=[];for(var f=.25,h=a.door.height-1.5,l=0,e=0;e<a.door.locks;e++,l++){var m=[a.door.position[0],a.door.position[1]],n={position:m,alive:!0};addRenderPiece(n,"Lock",[.75,1],[f,h]),addRenderPiece(n,"Hole",[.3,.75],[f+.2,h+.1]),a.door.lockEntities.push(n),a.entities.push(n),f+=1,2==l&&(f=.25,h-=1.25)}for(var e in Levels[b].floors){var o=Levels[b].floors[e];o=initializeSquare(o.position,o.width,o.height,"Floor",o.id),addRenderPiece(o,"Floor",[o.width,o.height]),addCollisionVolume(o,o.width,o.height,COLLISION.COLLIDES),a.entities.push(o)}for(var e in Levels[b].paths){var o=initializePath(Levels[b].paths[e]);if(a.entities.push(o),a.debug){addRenderPiece(o,"Key",[1,1]);var p=initializeNullEntity();for(var e in o.nodes)addRenderPiece(p,"Key",[1,1],o.nodes[e].position);a.entities.push(p)}}for(var e in Levels[b].lavas){var o=Levels[b].lavas[e];o=initializeSquare(o.position,o.width,o.height,"Lava"),addRenderPiece(o,"Kill",[o.width,o.height]),addCollisionVolume(o,o.width,o.height,COLLISION.KILL),a.entities.push(o)}for(var e in Levels[b].fireWheels){var o=initializeFireWheel(Levels[b].fireWheels[e]),q=addRenderPiece(o,"Key",[1,1]);q.distanceFromOrigin=0,a.entities.push(o)}for(var e in Levels[b].keys){var o=Levels[b].keys[e];o=initializeKey(o.position),addRenderPiece(o,"Key",[o.width,o.height]),addCollisionVolume(o,o.width,o.height,COLLISION.INTERACT),a.entities.push(o)}for(var e in Levels[b].springs){var o=Levels[b].springs[e];o=initializeSquare(o.position,o.width,o.height,"Spring"),addRenderPiece(o,"Spring",[o.width,o.height]),addCollisionVolume(o,o.width,o.height,COLLISION.VSPRING),a.entities.push(o)}for(var e in Levels[b].ices){var o=Levels[b].ices[e];o=initializeSquare(o.position,o.width,o.height,"Ice"),addRenderPiece(o,"Ice",[o.width,o.height]),addCollisionVolume(o,o.width,o.height,COLLISION.COLLIDES|COLLISION.SLIDE),o.life=10,o.alive=!0,o.maxHeight=o.height,a.entities.push(o)}for(var e in Levels[b].entities){var o=JSON.parse(JSON.stringify(Levels[b].entities[e]));if("FireWheel"==o.type){var o=initializeFireWheel(o),q=addCollisionVolume(o,1,1,COLLISION.NONE);q.distanceFromOrigin=0}else if("Rotate"==o.type){var q=addRenderPiece(o,o.type,[o.width,o.height]);q.distanceFromOrigin=o.distanceFromOrigin;var r=addCollisionVolume(o,o.width,o.height,COLLISION.COLLIDES);r.distanceFromOrigin=o.distanceFromOrigin}else addRenderPiece(o,o.type,[o.width,o.height]),addCollisionVolumeByEntity(o);a.entities.push(o)}a.player=initializePlayer([Levels[b].player.position[0],Levels[b].player.position[1]]),addRenderPiece(a.player,"Player",[2*a.player.radius,2*a.player.radius]),addRenderEffect(a.player.pieces[0],RENDER_EFFECTS.VELOCITY_TRAIL),addCollisionVolume(a.player,2*a.player.radius,2*a.player.radius,COLLISION.COLLIDES),addCollisionVolume(a.player,2*a.player.radius,2*a.player.radius,COLLISION.CAN_BE_HIT),a.player.accelerated=0,a.entities.push(a.player);for(var e in Levels[b].slimes){var o=Levels[b].slimes[e];o=initializeSquare(o.position,o.width,o.height,"Slime"),addRenderPiece(o,"Slime",[o.width,o.height]),addCollisionVolume(o,o.width,o.height,COLLISION.INTERACT),a.entities.push(o)}}}function move(a,b){a.position[0]+=a.velocity[0]*b,a.position[1]+=a.velocity[1]*b,Game.level.toroidal&&(a.position[1]<0?a.position[1]+=Game.height*Game.PixelsToMeters:a.position[1]>Game.height*Game.PixelsToMeters&&(a.position[1]-=Game.height*Game.PixelsToMeters),a.position[0]<0?a.position[0]+=Game.width*Game.PixelsToMeters:a.position[0]>Game.width*Game.PixelsToMeters&&(a.position[0]-=Game.width*Game.PixelsToMeters))}function handlePlayerInputs(a,b){var c=2*a.radius,d=(Inputs.running,100*Inputs.amount);a.drag=[15*-a.velocity[0],0];for(var e=jumpVel(12,.45),f=-.25*a.velocity[0],g=!1,h=0;h<Game.entities.length;h++)if(Game.entities[h]){if("Slime"==Game.entities[h].type){var i=Game.entities[h];AABB(a.position,c,c,i.position,i.width,i.height)&&(a.drag=[30*-a.velocity[0],30*-a.velocity[1]],g=!0)}if(Game.entities[h].alive&&"Ice"==Game.entities[h].type){var j=Game.entities[h],k=[j.position[0],j.position[1]+.01];AABB(a.position,c,c,k,j.width,j.height)&&(a.drag=[.1*-a.velocity[0],.1*-a.velocity[1]],f=0)}}Inputs.forward?(a.velocity[0]<0&&(a.velocity[0]+=f),g||(a.drag=[0,0])):Inputs.back?(a.velocity[0]>0&&(a.velocity[0]+=f),d*=-1,g||(a.drag=[0,0])):(d=0,a.jump&&(g||(a.drag=[5*-a.velocity[0],0]))),a.speed[0]=Math.cos(a.rotation)*d,a.speed[1]=Math.sin(a.rotation)*d,Inputs.jump&&0==a.jump&&(a.speed[0]+=Math.sin(a.rotation)*e/b,a.speed[1]+=Math.cos(a.rotation)*e/b,a.jump=1,PlaySound("jump",.2))}function movePlayerNew(a,b){var c=jumpVel(12,.45),d=jumpGravity(12,.45);a.jump&&!Inputs.jump&&a.velocity[1]>=0&&(d=jumpGravity(36,.45));var e=(a.radius,Inputs.running?50:10);a.spring;var f=[a.drag[0],a.drag[1]];a.accelerated>0&&(f[0]=0,a.accelerated-=b),a.velocity[0]+=b*a.speed[0]+b*a.drag[0],a.velocity[1]+=b*a.speed[1]+b*d+b*a.drag[1],a.accelerated<=0&&(a.velocity[0]>e&&(a.velocity[0]=e),a.velocity[0]<-e&&(a.velocity[0]=-e)),a.velocity[1]<-110&&(a.velocity[1]=-100),move(a,b);for(var g=0;g<Game.entities.length;++g)if(Game.entities[g]&&Game.entities[g]!=a){var h=0;if(Game.entities[g].volumes&&(Game.entities[g].volumes[h].type&COLLISION.KILL&&AABB(a.position,a.volumes[0].dimension[0],a.volumes[0].dimension[1],Game.entities[g].position,Game.entities[g].volumes[h].dimension[0],Game.entities[g].volumes[h].dimension[1])&&(Game.FadeOut=!0,Game.FadeTime=Game.MaxFadeTime),Game.entities[g].volumes[h].type&COLLISION.COLLIDES&&(RayCast(getPlayerRay(a),Game.entities[g].position,Game.entities[g].volumes[h].dimension[0],Game.entities[g].volumes[h].dimension[1])&&(a.velocity[0]>0?a.position[0]=Game.entities[g].position[0]-a.volumes[0].dimension[0]:a.velocity[0]<0&&(a.position[0]=Game.entities[g].position[0]+Game.entities[g].volumes[h].dimension[0]),a.velocity[0]=0),AABB([a.position[0],a.position[1]+a.volumes[0].dimension[1]-.2],a.volumes[0].dimension[0],.2,Game.entities[g].position,Game.entities[g].volumes[h].dimension[0],Game.entities[g].volumes[h].dimension[1])&&(a.position[1]=Game.entities[g].position[1]-a.volumes[0].dimension[1],a.velocity[1]>0&&(a.velocity[1]=0)),AABB(a.position,a.volumes[0].dimension[0],a.volumes[0].dimension[1],Game.entities[g].position,Game.entities[g].volumes[h].dimension[0],Game.entities[g].volumes[h].dimension[1])&&(a.position[1]=Game.entities[g].position[1]+Game.entities[g].volumes[h].dimension[1],a.velocity[1]<0&&(a.velocity[1]=0,a.jump=0))),Game.entities[g].volumes[h].type&COLLISION.VSPRING&COLLISION.NONE&&(RayCast(getPlayerRay(a),Game.entities[g].position,Game.entities[g].volumes[h].dimension[0],Game.entities[g].volumes[h].dimension[1])&&(a.velocity[0]>0?a.position[0]=spring.position[0]-a.volumes[0].dimension[0]:a.velocity[0]<0&&(a.position[0]=spring.position[0]+spring.width),a.velocity[0]=0),AABB(a.position,a.volumes[0].dimension[0],a.volumes[0].dimension[1],Game.entities[g].position,Game.entities[g].volumes[h].dimension[0],Game.entities[g].volumes[h].dimension[1])&&a.velocity[1]<0&&(a.speed[1]=0,a.velocity[1]=2*c,a.jump=1)),Game.entities[g].volumes[h].type&COLLISION.HSPRING&COLLISION.NONE&&AABB(a.position,a.volumes[0].dimension[0],a.volumes[0].dimension[1],Game.entities[g].position,Game.entities[g].volumes[h].dimension[0],Game.entities[g].volumes[h].dimension[1])&&(a.speed[0]=0,a.position[0]>=Game.entities[g].position[0]?a.position[0]=Game.entities[g].position[0]+Game.entities[g].volumes[h].dimension[0]+a.volumes[0].dimension[0]:a.position[0]=spring.position[0]-a.volumes[0].dimension[0],Inputs.forward=!1,Inputs.back=!1,a.velocity[0]=5*(a.velocity[0]<0?1:-1)*c,a.accelerated=.2),Game.entities[g].volumes[h].type&COLLISION.INTERACT&COLLISION.NONE&&("Key"==Game.entities[g].type&&AABB(a.position,a.volumes[0].dimension[0],a.volumes[0].dimension[1],Game.entities[g].position,Game.entities[g].volumes[h].dimension[0],Game.entities[g].volumes[h].dimension[1])&&(a.keys++,Game.entities[g].alive=0,Game.entities[g].volumes[h].type=COLLISION.NONE),"Door"==Game.entities[g].type&&AABB(a.position,a.volumes[0].dimension[0],a.volumes[0].dimension[1],Game.entities[g].position,Game.entities[g].volumes[h].dimension[0],Game.entities[g].volumes[h].dimension[1])&&a.keys))){Game.door.locks-=a.keys;for(var i=0;i<a.keys;i++){for(var j=Game.door.lockEntities.length-1;j>=0;j--)if(Game.door.lockEntities[j].alive){Game.door.lockEntities[j].alive=!1;break}a.keys--}Game.door.locks<=0&&(Game.FadeOut=!0,Game.FadeTime=Game.MaxFadeTime,Game.IncrementLevel=!0)}}a.trailTime-=b,a.trailTime<0&&(a.trailTime=1/120,0!=a.velocity[0]||0!=a.velocity[1]?a.trail.push([a.position[0],a.position[1]]):a.trail.push([-1e4,-1e3]),a.trail.length>15&&(a.trail=a.trail.slice(-15)))}function movePlayer(a,b){BEGIN_TIMED_FUNCTION();var c=jumpVel(12,.45),d=jumpGravity(12,.45);a.jump&&!Inputs.jump&&a.velocity[1]>=0&&(d=jumpGravity(36,.45));var e=a.volumes[0].dimension[0],f=Inputs.running?50:10;a.spring;var g=[a.drag[0],a.drag[1]];a.accelerated>0&&(g[0]=0,a.accelerated-=b),a.velocity[0]+=b*a.speed[0]+b*a.drag[0],a.velocity[1]+=b*a.speed[1]+b*d+b*a.drag[1],a.accelerated<=0&&(a.velocity[0]>f&&(a.velocity[0]=f),a.velocity[0]<-f&&(a.velocity[0]=-f)),a.velocity[1]<-110&&(a.velocity[1]=-100),move(a,b);for(var h=0;h<Game.entities.length;++h)if(Game.entities[h]&&a!=Game.entities[h])for(var i=0;i<a.volumes.length;i++)if(Game.entities[h].volumes)for(var j=0;j<Game.entities[h].volumes.length;j++){var k=add(Game.entities[h].position,Game.entities[h].volumes[j].offset);if(a.volumes[i].type&COLLISION.CAN_BE_HIT&&Game.entities[h].volumes[j].type&COLLISION.KILL){var l=Game.entities[h],m=add(l.position,Game.entities[h].volumes[j].offset),n=Game.entities[h].volumes[j].dimension[0],o=Game.entities[h].volumes[j].dimension[1];AABB(a.position,a.volumes[i].dimension[0],a.volumes[i].dimension[1],m,n,o)&&(Game.FadeOut=!0,Game.FadeTime=Game.MaxFadeTime)}if(a.volumes[i].type&COLLISION.COLLIDES){if(Game.entities[h].volumes[j].type&COLLISION.COLLIDES&&(AABB(a.position,a.volumes[i].dimension[0],a.volumes[i].dimension[1],k,.1,Game.entities[h].volumes[j].dimension[1]-.5)&&(a.position[0]=k[0]-a.volumes[i].dimension[0],a.velocity[0]=0),AABB(a.position,a.volumes[i].dimension[0],a.volumes[i].dimension[1],add(k,[Game.entities[h].volumes[j].dimension[0]-.1,0]),.1,Game.entities[h].volumes[j].dimension[1]-.5)&&(a.position[0]=k[0]+Game.entities[h].volumes[j].dimension[0],a.velocity[0]=0),a.velocity[1]>0&&AABB([a.position[0],a.position[1]+a.volumes[i].dimension[1]-.2],a.volumes[i].dimension[0],.2,k,Game.entities[h].volumes[j].dimension[0],Game.entities[h].volumes[j].dimension[1])&&a.velocity[1]>0&&AABB(a.position,a.volumes[i].dimension[0],a.volumes[i].dimension[1],k,Game.entities[h].volumes[j].dimension[0],Game.entities[h].volumes[j].dimension[1])&&(a.position[1]=k[1]-a.volumes[i].dimension[1],a.velocity[1]=0),a.velocity[1]<=0&&AABB(a.position,a.volumes[i].dimension[0],a.volumes[i].dimension[1],k,Game.entities[h].volumes[j].dimension[0],Game.entities[h].volumes[j].dimension[1])&&(a.position[1]=k[1]+Game.entities[h].volumes[j].dimension[1],a.velocity[1]<0&&(a.velocity[1]=0,a.jump=0))),Game.entities[h].volumes[j].type&COLLISION.VSPRING){var p=Game.entities[h];getPlayerRay(a);1==Game.player.jump?AABB(a.position,a.volumes[i].dimension[0],a.volumes[i].dimension[1],k,Game.entities[h].volumes[j].dimension[0],Game.entities[h].volumes[j].dimension[1])&&(a.position[1]=k[1]+Game.entities[h].volumes[j].dimension[1],a.speed[1]=0,a.velocity[1]=2*c,a.jump=1):(AABB(a.position,a.volumes[i].dimension[0],a.volumes[i].dimension[1],k,.1,Game.entities[h].volumes[j].dimension[1]-.5)&&(a.position[0]=k[0]-a.volumes[i].dimension[0],a.velocity[0]=0),AABB(a.position,a.volumes[i].dimension[0],a.volumes[i].dimension[1],add(k,[Game.entities[h].volumes[j].dimension[0]-.1,0]),.1,Game.entities[h].volumes[j].dimension[1]-.5)&&(a.position[0]=k[0]+Game.entities[h].volumes[j].dimension[0],a.velocity[0]=0),a.velocity[1]>0&&AABB([a.position[0],a.position[1]+a.volumes[i].dimension[1]-.2],a.volumes[i].dimension[0],.2,k,Game.entities[h].volumes[j].dimension[0],Game.entities[h].volumes[j].dimension[1])&&(a.position[1]=k[1]-a.volumes[i].dimension[1],a.velocity[1]=0),AABB(a.position,a.volumes[i].dimension[0],a.volumes[i].dimension[1],k,Game.entities[h].volumes[j].dimension[0],Game.entities[h].volumes[j].dimension[1])&&(a.position[1]=k[1]+Game.entities[h].volumes[j].dimension[1],a.speed[1]=0,a.velocity[1]=2*c,a.jump=1))}if(Game.entities[h].volumes[j].type&COLLISION.HSPRING){var p=Game.entities[h];AABB(a.position,e,e,p.position,Game.entities[h].volumes[j].dimension[0],Game.entities[h].volumes[j].dimension[1])&&(a.speed[0]=0,a.position[0]>=p.position[0]?a.position[0]=p.position[0]+p.width+e:a.position[0]=p.position[0]-e,Inputs.forward=!1,Inputs.back=!1,a.velocity[0]=5*(a.velocity[0]<0?1:-1)*c,a.accelerated=.2)}if(Game.entities[h].volumes[j].type&COLLISION.INTERACT){if("Key"==Game.entities[h].type){var q=Game.entities[h];q.alive&&AABB(a.position,e,e,q.position,2*q.width,q.height)&&(a.keys++,q.alive=0)}if("Door"==Game.entities[h].type&&AABB(a.position,e,e,Game.door.position,Game.door.width,Game.door.height)&&a.keys){Game.door.locks-=a.keys;for(var r=0;r<a.keys;r++)for(var s=Game.door.lockEntities.length-1;s>=0;s--){var t=Game.door.lockEntities[s];if(t.alive){t.alive=!1;break}}a.keys=0,Game.door.locks<=0&&(Game.FadeOut=!0,Game.FadeTime=Game.MaxFadeTime,Game.IncrementLevel=!0)}}}}a.trailTime-=b,a.trailTime<0&&(a.trailTime=1/120,0!=a.velocity[0]||0!=a.velocity[1]?a.trail.push([a.position[0],a.position[1]]):a.trail.push([-1e4,-1e3]),a.trail.length>15&&(a.trail=a.trail.slice(-15))),END_TIMED_FUNCTION()}function moveAndUpdate(a){BEGIN_TIMED_FUNCTION();for(var b=4,c=a.deltaTime/1e3,d=c/b,e=0;e<b;e++)for(var f=0;f<a.entities.length;++f)if(a.entities[f]){switch(a.entities[f].type){case"Shoot":BEGIN_TIMED_BLOCK("Shoot Entity"),a.entities[f].timer-=d,a.entities[f].timer<0&&(a.entities[f].timer=a.entities[f].delay-a.entities[f].timer,addBullet(a.entities[f])),END_TIMED_BLOCK("Shoot Entity");break;case"Rotate":BEGIN_TIMED_BLOCK("Rotate Entity"),a.entities[f].angle+=a.entities[f].speed*d;var g=Math.sin(a.entities[f].angle),h=Math.cos(a.entities[f].angle);if(a.entities[f].pieces)for(var i=0;i<a.entities[f].pieces.length;i++){var j=multiply([g,h],a.entities[f].pieces[i].distanceFromOrigin);j=add(j,multiply(a.entities[f].pieces[i].dimension,-.5)),a.entities[f].pieces[i].offset=j}if(a.entities[f].volumes)for(var k=0;k<a.entities[f].volumes.length;k++){var l=multiply([g,h],a.entities[f].volumes[k].distanceFromOrigin),j=add(l,multiply(a.entities[f].volumes[k].dimension,-.5)),m=subtract(j,a.entities[f].volumes[k].offset);if(a.entities[f].volumes[k].offset=j,a.entities[f].volumes[k].type&COLLISION.COLLIDES&&AABB(add(a.entities[f].position,a.entities[f].volumes[k].offset),a.entities[f].volumes[k].dimension[0],a.entities[f].volumes[k].dimension[1]+.2,a.player.position,a.player.volumes[0].dimension[0],a.player.volumes[0].dimension[1])){a.player.position[0]+=m[0],a.player.position[1]+=m[1];for(var n in a.player.pieces[0].trail)a.player.pieces[0].trail[n][0]+=m[0],a.player.pieces[0].trail[n][1]+=m[1]}}END_TIMED_BLOCK("Rotate Entity");break;case"Ice":if(a.entities[f].alive){if(a.entities[f].life-=d,a.entities[f].life<=0){a.entities[f].life=0,a.entities[f].alive=!1;for(var o in a.entities[f].volumes)a.entities[f].volumes[o].type=COLLISION.NONE}for(var i in a.entities[f].pieces)a.entities[f].pieces[i].dimension[1]=a.entities[f].maxHeight*(a.entities[f].life/10);for(var k in a.entities[f].volumes)a.entities[f].volumes[k].dimension[1]=a.entities[f].maxHeight*(a.entities[f].life/10),createCollisionVolumeBuffer(a.entities[f].volumes[k])}break;case"Bullet":if(a.entities[f].position[0]<-200-a.entities[f].width||a.entities[f].position[0]>200||a.entities[f].position[1]<-200-a.entities[f].height||a.entities[f].position[1]>200){delete a.entities[f];continue}var m=[a.entities[f].speed*a.entities[f].direction[0]*d,a.entities[f].speed*a.entities[f].direction[1]*d];a.entities[f].position[0]+=m[0],a.entities[f].position[1]+=m[1];var k=0;if(a.entities[f].volumes[k].type&COLLISION.COLLIDES&&AABB(add(a.entities[f].position,a.entities[f].volumes[k].offset),a.entities[f].volumes[k].dimension[0],a.entities[f].volumes[k].dimension[1]+.2,a.player.position,a.player.volumes[0].dimension[0],a.player.volumes[0].dimension[1])){a.player.position[0]+=m[0],a.player.position[1]+=m[1];for(var n in a.player.pieces[0].trail)a.player.pieces[0].trail[n][0]+=m[0],a.player.pieces[0].trail[n][1]+=m[1]}break;case"Player":0==e&&handlePlayerInputs(a.entities[f],c),movePlayer(a.entities[f],d),a.keySpan.innerHTML=a.entities[f].keys;break;case"Path":BEGIN_TIMED_BLOCK("Path Entity");var p=a.entities[f].end_position[0]-a.entities[f].start_position[0],q=a.entities[f].end_position[1]-a.entities[f].start_position[1],r=Math.atan2(q,p),g=Math.cos(r),h=Math.sin(r);if(a.entities[f].position[0]+=a.entities[f].speed*d*g,a.entities[f].position[1]+=a.entities[f].speed*d*h,a.entities[f].attached)for(var s in a.entities)if(a.entities[s].id==a.entities[f].attached&&(a.entities[s].position[0]+=a.entities[f].speed*d*g,a.entities[s].position[1]+=a.entities[f].speed*d*h,AABB(a.entities[s].position,a.entities[s].width,a.entities[s].height+.1,a.player.position,a.player.volumes[0].dimension[0],a.player.volumes[0].dimension[1]))){a.player.position[0]+=a.entities[f].speed*d*g,a.player.position[1]+=a.entities[f].speed*d*h;for(var n in a.player.pieces[0].trail)a.player.pieces[0].trail[n][0]+=a.entities[f].speed*d*g,a.player.pieces[0].trail[n][1]+=a.entities[f].speed*d*h}AABB(a.entities[f].position,.1,.1,a.entities[f].end_position,.1,.1)&&(a.entities[f].position=[a.entities[f].end_position[0],a.entities[f].end_position[1]],a.entities[f].current_node=getNextNodeIndex(a.entities[f]),a.entities[f].start_position=a.entities[f].end_position,a.entities[f].end_position=getNextNode(a.entities[f]).position),END_TIMED_BLOCK("Path Entity")}if(a.entities[f].pieces)for(var i=0;i<a.entities[f].pieces.length;i++)BEGIN_TIMED_BLOCK("Update Render Effect"),a.entities[f].pieces[i].effects&&a.entities[f].pieces[i].effects&(RENDER_EFFECTS.TRAIL|RENDER_EFFECTS.VELOCITY_TRAIL)&&(a.entities[f].pieces[i].trailTime-=d,a.entities[f].pieces[i].trailTime<0&&(a.entities[f].pieces[i].trailTime=1/120,a.entities[f].pieces[i].effects&RENDER_EFFECTS.VELOCITY_TRAIL?0!=a.entities[f].velocity[0]||0!=a.entities[f].velocity[1]?a.entities[f].pieces[i].trail.push([a.entities[f].position[0],a.entities[f].position[1]]):a.entities[f].pieces[i].trail.push([-1e4,-1e3]):a.entities[f].pieces[i].trail.push([a.entities[f].position[0],a.entities[f].position[1]]),a.entities[f].pieces[i].trail.length>15&&(a.entities[f].pieces[i].trail=a.entities[f].pieces[i].trail.slice(-15)))),END_TIMED_BLOCK("Update Render Effect")}END_TIMED_FUNCTION()}function addBullet(a){var b={type:"Bullet",width:a.width,height:a.height,position:[a.position[0],a.position[1]],speed:a.speed,direction:[a.direction[0],a.direction[1]]},c=a.collision||COLLISION.KILL|COLLISION.CAN_BE_HIT,d=a.draw||"Kill";addRenderPiece(b,d,[a.width,a.height]),addCollisionVolume(b,a.width,a.height,c),Game.entities.push(b),"Kill"==d&&PlaySound("shoot",.2)}function InitAudio(){Game.audio=new AudioContext,Game.NumChannels=4,Game.osc=[],Game.gain=[],Game.ReadContext=0,Game.BackgroundMusic=[],Game.BackgroundMusic[0]=["Ds4","B4","G4","B4","Ds4","B4","G4","B4","Ds4","B4","G4","B4","Ds4","B4","G4","B4","C4","A4","F4","A4","C4","A4","F4","A4","C4","A4","F4","A4","C4","A4","F4","A4","C4","A4","E4","A4","D4","A4","F4","A4","D4","A4","F4","A4","D4","As4","F4","A4","D4","As4","F4","A4","C4","G4","C4","G4","B4","F4","B4","F4","A4","F4","A4","F4","G4","F4","G4","D4","E4","C4","A3","C4","-","C4","A3","C4","D4","B3","F3","B3","D4","Bs3","G3","B3","B3","B3","B3","B3"],Game.BackgroundMusic[1]=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","G3","G3","G3","G3","F3","F3","F3","F3","E3","E3","E3","E3","D3","D3","D3","D3","E3","E3","E3","E3","E3","E3","E3","E3","D3","D3","D3","D3","D3","D3","D3","D3","D3","D3","D3","D3"],Game.BackgroundMusic[0]="F3 F3 * * * * * F3 F3 * * * * * E3 E3 * * * * * E3 E3 * * * * * Ds3 Ds3 * * * * * Ds3 Ds3 * * * * * D3 D3 * * * * * G3 G3 * * * * * F3 F3 * * * * * E3 E3 * * * * *",Game.BackgroundMusic[0]=Game.BackgroundMusic[0].split(" "),Game.BackgroundMusic[1]="Gs4 Gs4 F4 C4 F3 C4 F4 Gs4 Gs4 F4 C4 F3 C4 F4 G4 G4 F4 C4 E3 C4 F4 G4 G4 F4 C4 E3 C4 F4 A4 A4 F4 C4 Ds3 C4 F4 A4 A4 F4 C4 Ds3 C4 F4 A4 A4 F4 D4 D3 D4 F4 As4 As4 G4 D4 A3 D4 G4 As4 As4 F4 D4 F3 D4 F4 G4 G4 E4 C4 E3 C4 E4",Game.BackgroundMusic[1]=Game.BackgroundMusic[1].split(" ")}function StartAudioMusic(){for(var a=0;a<Game.NumChannels;a++)Game.osc[a]=Game.audio.createOscillator(),Game.osc[a].frequency.value=0,Game.gain[a]=Game.audio.createGain(),Game.osc[a].connect(Game.gain[a]),Game.gain[a].connect(Game.audio.destination),Game.osc[a].start(0);play(),fps=145,fps=280,Game.MusicInterval=setInterval(play,1/(fps/60)*1e3)}function StopAudioMusic(){clearInterval(Game.MusicInterval),Game.MusicInterval=!1;for(var a=0;a<Game.NumChannels;a++)Game.osc[a].stop(0)}function play(){Game.osc[0].frequency.value=0;var a=[.005,.005];if(Game.ReadContext>=0)for(var b=0;b<Game.BackgroundMusic.length;b++){var c=["square","square"],d=Game.BackgroundMusic[b][Game.ReadContext];if(d&&scale[d]){var e=scale[d];Game.osc[b].type=c[b],Game.osc[b].frequency.value=e,Game.gain[b].gain.value=a[b]}else{var e=0;Game.osc[b].type=c[b],Game.osc[b].frequency.value=e,Game.gain[b].gain.value=0}}Game.ReadContext+=1,Game.ReadContext>=Game.BackgroundMusic[0].length&&(Game.ReadContext=0)}function initGame(){Game.MaxFadeTime=.25,Game.width=document.getElementById("body").clientWidth,Game.height=document.getElementById("body").clientHeight,Game.timerSpan=document.getElementById("timer"),Game.keySpan=document.getElementById("keys"),Game.roomSpan=document.getElementById("room"),Game.debugSpan=document.getElementById("debug"),Game.time=0,Game.gravity=9.8,Game.paused=!1,Game.started=!1,Game.BackgroundRGBA=[0,0,0,1];var a=9*Game.width/16;if(a>Game.height?Game.width=16*Game.height/9:Game.height=a,Game.entities=[],Game.MetersToPixels=Game.width/100,Game.PixelsToMeters=1/Game.MetersToPixels,Game.timerSpan.parentNode.setAttribute("style","z-index:10;position:absolute;color:#FFF;top:"+1.5*Game.MetersToPixels+"px;font-size:"+2*Game.MetersToPixels+"px"),Game.keySpan.parentNode.setAttribute("style","z-index:10;position:absolute;color:#FFF;top:"+1.5*Game.MetersToPixels+"px;font-size:"+2*Game.MetersToPixels+"px;left:"+30.5*Game.MetersToPixels+"px;"),Game.roomSpan.parentNode.setAttribute("style","z-index:10;position:absolute;color:#FFF;top:"+1.5*Game.MetersToPixels+"px;font-size:"+2*Game.MetersToPixels+"px;left:"+80.5*Game.MetersToPixels+"px;"),Game.deltaTime=0,Game.CurrentLevel=0,Game.debugRunningSpeed=1,Game.debug=DEBUG,Game.canvas=document.getElementById("canvas"),Game.canvas.setAttribute("width",Game.width),Game.canvas.setAttribute("height",Game.height),Game.context=canvas.getContext("experimental-webgl",{premultipliedAlpha:!0,preserveDrawingBuffer:!0}),gl=Game.context,Game.context)Game.GL_ENABLED=!0,Game.ItemBuffer=gl.createBuffer(),Game.FadeBuffer=gl.createBuffer(),initOpenGL(),Game.camera.tileBackgroundX=258.5,Game.camera.tileBackgroundY=142,Game.fb=gl.createFramebuffer(),gl.bindFramebuffer(gl.FRAMEBUFFER,Game.fb),Game.texture=gl.createTexture(),gl.bindTexture(gl.TEXTURE_2D,Game.texture),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,Game.canvas.width/2,Game.canvas.height/2,0,gl.RGBA,gl.UNSIGNED_BYTE,null),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE),gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,Game.texture,0),Game.canvas.setAttribute("style","width:"+Game.canvas.width+"px;height:"+Game.canvas.height+";px");else{var b=Game.canvas.parentNode;Game.canvas.parentNode.removeChild(Game.canvas),Game.canvas=document.createElement("canvas"),Game.canvas.setAttribute("id","canvas"),Game.canvas.setAttribute("width",Game.width),Game.canvas.setAttribute("height",Game.height),Game.canvas.setAttribute("style","background-color:"+RGB2HexColor(Game.BackgroundRGBA)+";"),b.appendChild(Game.canvas),Game.context=Game.canvas.getContext("2d"),Game.GL_ENABLED=!1}initializeLevel(Game,Game.CurrentLevel),initInputs(),Game.lastTime=performance.now()}function EndGame(){StopAudioMusic();var a=document.createElement("div");a.id="end",a.innerHTML="<center><BR><BR>Thanks For Playing.<BR>This game is currently under development.<BR> Subscribe to Wrong Prize Games to follow it's progress.<BR>Completion Time: "+Game.time/1e3+"<center>",a.setAttribute("style","z-index:100;position:absolute;top:0px;width:100%;height:100%;background-color:#DDD;"),document.body.appendChild(a)}function resetGame(){initializeLevel(Game,Game.CurrentLevel)}function renderFade(a,b){Game.GL_ENABLED?renderFadeOpenGl(a,b):renderFadeCanvas(a,b)}function draw(){BEGIN_TIMED_FUNCTION(),Game.GL_ENABLED?drawGL():drawCanvas(),END_TIMED_FUNCTION()}function drawCanvas(){Game.context.save(),Game.context.clearRect(0,0,Game.width,Game.height),Game.context.translate(0,Game.height),Game.context.scale(1,-1);for(var a=0;a<Game.entities.length;a++)renderEntity(Game.entities[a],Game.context);Game.context.restore()}function drawGL(){var a=Game.context;a.bindFramebuffer(a.FRAMEBUFFER,Game.fb),a.clearColor(Game.BackgroundRGBA[0],Game.BackgroundRGBA[1],Game.BackgroundRGBA[2],Game.BackgroundRGBA[3]),Game.program=Game.programBase,a.useProgram(Game.program),a.viewport(0,0,Game.canvas.width/2,Game.canvas.height/2),a.clear(a.DEPTH_BUFFER_BIT|a.COLOR_BUFFER_BIT);for(var b=[],c=0;c<Game.entities.length;c++)bufferEntityOpenGL(Game.entities[c],b),console.assert(b.length%9==0);a.enable(a.BLEND);var d=[Game.camera.translate[0],Game.camera.translate[1]];if(Game.camera.translate[0]=d[0]+0*Game.camera.tileBackgroundX,Game.camera.translate[1]=d[1]+0*Game.camera.tileBackgroundY,OpenGlBufferRenderPreBind(Game.BackgroundBuffer,Game.BackgroundBuffer.numItems,a.TRIANGLES),Game.camera.translate=d,OpenGlBufferRenderRaw(b,Game.ItemBuffer,b.length/9,a.TRIANGLE_STRIP),a.disable(a.BLEND),Game.debug)for(var c=0;c<Game.entities.length;c++)renderEntityDebugOpenGL(Game.entities[c],Game.context);Game.program=Game.programUV,a.viewport(0,0,Game.canvas.width,Game.canvas.height),a.useProgram(Game.programUV),a.bindFramebuffer(a.FRAMEBUFFER,null);for(var e=OpenGLSquare([0,0],Game.canvas.width*Game.PixelsToMeters,Game.canvas.height*Game.PixelsToMeters),f=[1,0,0,1],g=[1,0,0,0,1,1,0,1],b=[],h=0;h<e.length;h+=2)b=b.concat(e[h],e[h+1],g[h],g[h+1],f,[-1*Game.camera.translate[0],-1*Game.camera.translate[1],1]);a.disable(a.BLEND),a.bindTexture(a.TEXTURE_2D,Game.texture),OpenGlBufferRenderRawUV(b,Game.FadeBuffer,4,a.TRIANGLE_STRIP),a.enable(a.BLEND),a.bindTexture(a.TEXTURE_2D,null),Game.program=Game.programBase}function GameLoop(){if(Game.debug_events=[],Game.currentTime=performance.now(),Game.deltaTime=(Game.currentTime-Game.lastTime)*Game.debugRunningSpeed,BEGIN_TIMED_FUNCTION(),Game.paused)return Game.lastTime=Game.currentTime,void requestAnimationFrame(GameLoop);if(Game.CurrentLevel>=Levels.length)return void EndGame();var a=navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads?navigator.webkitGetGamepads:[];if(gp=a[0],gp&&(gp.buttons[2].pressed?Inputs.jump=!0:Inputs.jump=!1,gp.buttons[14].pressed?(Inputs.back=!0,Inputs.amount=1):Inputs.back=!1,gp.buttons[15].pressed?(Inputs.forward=!0,Inputs.amount=1):Inputs.forward=!1,gp.axes[0]>.5&&(Inputs.forward=!0,Inputs.amount=2*gp.axes[0]-1),gp.axes[0]<-.5&&(Inputs.back=!0,Inputs.amount=-1*(2*gp.axes[0]+1))),Game.deltaTime>34&&(Game.deltaTime=34),Game.FadeOut){Game.FadeTime-=Game.deltaTime/1e3;var b=1-Game.FadeTime/Game.MaxFadeTime;draw(),renderFade(b,Game.context),Game.FadeTime<=0&&(Game.LevelComplete=!0,Game.FadeOut=!1)}else if(Game.LevelComplete)Game.IncrementLevel&&(Game.IncrementLevel=!1,Game.CurrentLevel++),initializeLevel(Game,Game.CurrentLevel),Game.FadeIn=!0,Game.FadeTime=Game.MaxFadeTime,Game.LevelComplete=!1;else if(Game.FadeIn){Game.FadeTime-=Game.deltaTime/1e3;var b=Game.FadeTime/Game.MaxFadeTime;draw(),renderFade(b,Game.context),Game.FadeTime<=.1&&(Game.FadeIn=!1)}else handleInputs(),calculateRenderCycle(),moveAndUpdate(Game),draw(),Game.time+=Game.deltaTime,Game.timerSpan.innerHTML=parseInt(Game.time/10)/100;END_TIMED_FUNCTION(),DrawDebugEvents(),Game.lastTime=Game.currentTime,Game.roomSpan.innerHTML=Game.CurrentLevel+1,PlayQueue(),requestAnimationFrame(GameLoop)}function setPaused(){Game.paused?(Game.paused=!1,StartAudioMusic()):(Game.paused=!0,StopAudioMusic())}function setLevel(a){Game.CurrentLevel=a,initializeLevel(Game,Game.CurrentLevel)}function DEBUGGER(a,b){Game.debug_events.push({name:b,time:performance.now(),type:a})}function DrawDebugEvents(){for(var a={},b=[],c=0;c<Game.debug_events.length;c++)if("BEGIN_BLOCK"==Game.debug_events[c].type)b.push(Game.debug_events[c]);else if("END_BLOCK"==Game.debug_events[c].type){var d=b.pop();void 0==a[d.name]&&(a[d.name]={time:0,count:0}),a[d.name].time+=Game.debug_events[c].time-d.time,a[d.name].count++}Game.debugSpan.innerHTML="DEBUGGER:<BR>";for(var e in a)Game.debugSpan.innerHTML=e+": ("+a[e].count+") :"+a[e].time.toFixed(4)+"<BR>"+Game.debugSpan.innerHTML}function BEGIN_TIMED_FUNCTION(){DEBUGGER("BEGIN_BLOCK",BEGIN_TIMED_FUNCTION.caller.name)}function END_TIMED_FUNCTION(){DEBUGGER("END_BLOCK",END_TIMED_FUNCTION.caller.name)}function BEGIN_TIMED_BLOCK(a){DEBUGGER("BEGIN_BLOCK",a)}function END_TIMED_BLOCK(a){DEBUGGER("END_BLOCK",a)}function DrawDebugEvents(){Game.debugSpan.setAttribute("style","display:none;")}function BEGIN_TIMED_FUNCTION(){}function END_TIMED_FUNCTION(){}function BEGIN_TIMED_BLOCK(a){}function END_TIMED_BLOCK(a){}function getRenderCycle(){return Game.renderCycle/Game.renderMaxCycle}function calculateRenderCycle(){SetCamera(),Game.renderCycle+=Game.renderIncrement*Game.deltaTime/1e3,(Game.renderCycle<=0||Game.renderCycle>=Game.renderMaxCycle)&&(Game.renderCycle>=Game.renderMaxCycle?Game.renderCycle=Game.renderMaxCycle-(Game.renderCycle-Game.renderMaxCycle):Game.renderCycle*=-1,Game.renderIncrement*=-1)}function getRenderColor(a){switch(a){case"Player":return[0,0,1,1];case"Door":return[.3,.05,.05,1];case"Lock":return[.3,.3,.3,1];case"Hole":return[0,0,0,1];case"Ice":return[0,.7,1,.75];case"Slime":return[0,1,0,.5];case"Spring":return[0,.7,0,.75];case"HSpring":return[0,1,1,1];case"FireWheel":case"Lava":case"Kill":return[1,.5-parseFloat(.5*getRenderCycle()),0,1];case"Shoot":case"Key":return[1,1,1,1];case"BG":var b=Math.random();return[.1*b+.01,.1*b+.01,.1*b+.01,1];case"Ground":default:return[.5,.5,.5,1]}}function addRenderPiece(a,b,c,d){void 0===a.pieces&&(a.pieces=[]),d||(d=[0,0]);var e={buffer:null,color:b,dimension:c,offset:d};return Game.GL_ENABLED,a.pieces.push(e),e}function addVertsRenderPiece(a,b,c,d){void 0===a.pieces&&(a.pieces=[]),d||(d=[0,0]);var e={buffer:null,color:b,dimension:[0,0],offset:d};return Game.GL_ENABLED&&(e.buffer=createVertexBuffer(c,2)),a.pieces.push(e),e}function addRenderEffect(a,b){a.effects|=b,b&(RENDER_EFFECTS.TRAIL|RENDER_EFFECTS.VELOCITY_TRAIL)&&(a.trail=[],a.trailTime=1/60)}function SetCamera(){var a=add([50,25],multiply(Game.player.position,-1));Game.player.position[1]<25&&(a[1]=0),Game.camera.translate=a,Game.camera.settings.fixedCenter&&(Game.camera.translate=[0,0]),Game.camera.settings.fixedVertical&&(Game.camera.translate[1]=0)}var gp,Inputs={forward:!1,back:!1,jump:!1,running:!0,shoot:!1,restart:!1,hyper:!1,start:-1,skipLevel:0},SoundEffects={jump:"sounds/jump.mp3",shoot:"sounds/shoot.mp3"},EffectsQueue=[];const COLLISION={NONE:0,CAN_BE_HIT:2,KILL:4,COLLIDES:8,INTERACT:16,HSPRING:32,VSPRING:64,SLIDE:128};var Levels=[];Levels.push({camera:{fixedCenter:!0},floors:[{position:[0,0],width:100,height:1}],player:{position:[2,2]},keys:[{position:[50,1.5]}],door:{position:[95,1],locks:1}}),Levels.push({camera:{fixedCenter:!0},floors:[{position:[0,0],width:100,height:1},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1},{position:[75,0],width:2,height:12}],player:{position:[2,1]},keys:[{position:[25,1.5]},{position:[75,12.5]}],door:{position:[95,1],locks:2}}),Levels.push({camera:{fixedCenter:!0},entities:[{type:"Rotate",width:5,height:5,position:[50,25],distanceFromOrigin:20,angle:1,offset:[0,0],speed:1}],floors:[{position:[0,0],width:100,height:1},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1}],player:{position:[2,1]},keys:[{position:[50,48.5]}],door:{position:[95,1],locks:1}}),Levels.push({toroidal:!0,camera:{fixedCenter:!0},floors:[{position:[0,0],width:50,height:1},{position:[60,0],width:40,height:1},{position:[0,0],width:1,height:50},{position:[50,25],width:11,height:1},{position:[99,0],width:1,height:50},{position:[50,25],width:1,height:50},{position:[60,0],width:1,height:25},{position:[0,50],width:51,height:1},{id:1,position:[10,-50],width:10,height:50}],player:{position:[2,1]},keys:[{position:[25,1.5]},{position:[75,12.5]}],door:{position:[95,1],locks:2}}),Levels.push({toroidal:!0,camera:{fixedCenter:!0},floors:[{position:[0,0],width:100,height:1},{position:[50,0],width:1,height:50},{position:[0,50],width:100,height:1}],player:{position:[2,1]},keys:[{position:[55,1.5]}],door:{position:[35,1],locks:1}}),Levels.push({camera:{fixedCenter:!0},floors:[{position:[0,0],width:100,height:1},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1},{id:1,position:[10,-40],width:10,height:50}],player:{position:[2,1]},keys:[{position:[30,40]}],door:{position:[95,1],locks:1},paths:[{nodes:[{position:[10,10]},{position:[10,30]},{position:[80,30]},{position:[80,10]}],loop:!0,speed:20,width:1,height:1,attached:1}]}),Levels.push({camera:{fixedCenter:!0},floors:[{position:[0,0],width:100,height:1},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1},{position:[50,0],width:2,height:40}],springs:[{position:[25,1],width:3,height:1}],player:{position:[10,1]},keys:[{position:[55,1.5]}],door:{position:[95,1],locks:1}}),Levels.push({camera:{fixedCenter:!0},floors:[{position:[0,0],width:100,height:1},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1},{position:[70,10],width:10,height:1},{position:[70,20],width:10,height:1},{position:[70,30],width:10,height:1}],player:{position:[2,1]},keys:[{position:[25,1.5]},{position:[75,35.5]}],door:{position:[95,1],locks:2}}),Levels.push({camera:{fixedCenter:!0},floors:[{position:[0,0],width:10,height:10},{position:[90,0],width:10,height:10},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1},{position:[20,10],width:10,height:1},{position:[45,12],width:10,height:1},{position:[70,10],width:10,height:1}],lavas:[{position:[10,0],width:80,height:8}],player:{position:[1,10]},keys:[{position:[50,14.5]}],door:{position:[95,10],locks:1}}),Levels.push({camera:{fixedCenter:!0},floors:[{position:[0,0],width:100,height:1},{position:[-1,0],width:1,height:51},{position:[99,0],width:1,height:50},{position:[0,99],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1},{position:[0,10],width:90,height:1},{position:[10,20],width:90,height:1},{position:[0,30],width:90,height:1},{position:[10,40],width:90,height:1},{position:[0,43],width:4,height:1}],fireWheels:[{position:[10,20],length:10,speed:4},{position:[90,30],length:10,speed:-5,angle:Math.PI},{position:[50,20],length:10,speed:5},{position:[10,40],length:10,speed:4,angle:-Math.PI/2}],player:{position:[1,1]},keys:[{position:[95,42.5]}],door:{position:[0,44],locks:1}}),Levels.push({camera:{fixedCenter:!0},floors:[{position:[0,0],width:100,height:1},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1}],slimes:[{position:[1,1],width:98,height:.75}],player:{position:[2,1]},keys:[{position:[50,3.5]}],door:{position:[95,1],locks:1}}),Levels.push({camera:{fixedCenter:!0},floors:[{position:[0,0],width:100,height:1},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1}],ices:[{position:[0,1],width:100,height:1}],player:{position:[1,2]},keys:[{position:[50,2.5]}],door:{position:[95,1],locks:1}}),Levels.push({camera:{fixedCenter:!0},floors:[{position:[0,0],width:10,height:10},{position:[90,0],width:10,height:10},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1}],keys:[{position:[50,11.5]}],ices:[{position:[10,8],width:80,height:5}],lavas:[{position:[10,0],width:80,height:8}],player:{position:[1,10]},door:{position:[95,10],locks:1}}),Levels.push({camera:{fixedCenter:!0},floors:[{position:[0,0],width:10,height:10},{position:[90,0],width:10,height:10},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1}],ices:[{position:[20,15],width:10,height:1},{position:[45,15],width:10,height:1},{position:[60,22.5],width:10,height:1},{position:[20,30],width:10,height:1},{position:[45,30],width:10,height:1},{position:[1,35],width:10,height:1}],lavas:[{position:[10,0],width:80,height:8}],player:{position:[1,10]},keys:[{position:[5,36.5]}],door:{position:[95,10],locks:1}}),Levels.push({camera:{fixedCenter:!0},entities:[{position:[0,40],width:10,height:10,type:"Floor"},{position:[10,40],width:1,height:10,type:"HSpring"},{position:[10,1],width:5,height:2,type:"Spring"},{position:[20,0],width:40,height:41,type:"Lava"},{position:[18,0],width:2,height:41,type:"Floor"},{position:[60,0],width:2,height:41,type:"Floor"}],floors:[{position:[0,0],width:100,height:1},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1}],player:{position:[2,1]},keys:[{position:[70,1.5]}],door:{position:[95,1],locks:1}}),Levels.push({camera:{fixedVertical:!0},entities:[{type:"Shoot",width:1,height:1,position:[99,1],speed:50,delay:1,timer:1,direction:[-1,0]},{type:"Shoot",width:1,height:1,position:[99,10],speed:50,delay:1,timer:.5,direction:[-1,0]}],floors:[{position:[0,0],width:100,height:1},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1}],player:{position:[2,1]},keys:[{position:[50,1.5]}],door:{position:[95,1],locks:1}});for(var fireCirle=[],angle=0;angle<5.5;)fireCirle.push({type:"FireWheel",length:2,offset:10,position:[50,13],angle:angle,speed:2,size:2.5}),angle+=.2;fireCirle.push({type:"Floor",width:3,height:1,position:[49,12]}),fireCirle.push({type:"Floor",width:3,height:1,position:[19,10]}),Levels.push({camera:{fixedVertical:!0},entities:fireCirle,floors:[{position:[0,0],width:100,height:1},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1}],player:{position:[2,1]},keys:[{position:[50.25,13.5]}],door:{position:[95,1],locks:1}}),Levels.push({camera:{fixedVertical:!0},floors:[{position:[0,0],width:100,height:1},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1},{position:[10,40],width:19,height:1},{position:[30,40],width:19,height:1},{position:[50,40],width:19,height:1},{position:[70,40],width:21,height:1},{position:[10,0],width:1,height:40.1},{position:[20,0],width:1,height:30.1},{position:[30,10],width:1,height:30.1},{position:[40,0],width:1,height:30.1},{position:[50,10],width:1,height:30.1},{position:[60,0],width:1,height:30.1},{position:[70,10],width:1,height:30.1},{position:[80,0],width:1,height:30.1},{position:[90,20],width:1,height:20.1},{position:[95,0],width:5,height:5},{position:[90,0],width:11,height:3}],slimes:[{position:[10,41],width:81,height:1},{position:[29,0],width:1,height:41},{position:[49,0],width:1,height:41},{position:[69,0],width:1,height:41}],player:{position:[12,1]},keys:[{position:[7,1.5]}],door:{position:[1,1],locks:1},fireWheels:[{position:[20,40],length:15,speed:1,angle:0},{position:[40,40],length:10,speed:1,angle:0},{position:[40,20],length:10,speed:1,angle:0},{position:[60,40],length:10,speed:1,angle:0},{position:[60,20],length:10,speed:2,angle:0},{position:[70,20],length:10,speed:-1.5,angle:0},{position:[70,20],length:10,speed:-1.5,angle:Math.PI},{position:[90,30],length:20,speed:-1,angle:Math.PI}],lavas:[{position:[81,0],width:9,height:3}],springs:[{position:[15,1],width:3,height:1},{position:[35,1],width:3,height:1},{position:[55,1],width:3,height:1},{position:[75,1],width:3,height:1},{position:[95,5],width:3,height:1}]}),Levels.push({camera:{fixedVertical:!0},floors:[{position:[0,0],width:100,height:1},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1},{position:[37,10],width:6,height:1},{position:[37,20],width:6,height:1},{position:[37,30],width:6,height:1},{position:[37,40],width:6,height:1},{position:[37,50],width:6,height:1},{position:[57,10],width:6,height:1},{position:[57,20],width:6,height:1},{position:[57,30],width:6,height:1},{position:[57,40],width:6,height:1},{position:[57,50],width:6,height:1},{position:[47,15],width:6,height:1},{position:[47,25],width:6,height:1},{position:[47,35],width:6,height:1},{position:[47,45],width:6,height:1},{position:[27,15],width:6,height:1},{position:[27,25],width:6,height:1},{position:[27,35],width:6,height:1},{position:[27,45],width:6,height:1},{position:[67,15],width:6,height:1},{position:[67,25],width:6,height:1},{position:[67,35],width:6,height:1},{position:[67,45],width:6,height:1},{position:[17,30],width:6,height:1},{position:[77,30],width:6,height:1}],fireWheels:[{position:[49.5,30],length:30,speed:1},{position:[49.5,30],length:30,speed:1,angle:Math.PI},{position:[49.5,30],length:20,speed:1,angle:Math.PI/2},{position:[49.5,30],length:20,speed:1,angle:-Math.PI/2}],player:{position:[2,1]},keys:[{position:[50,16.5]},{position:[50,36.5]},{position:[40,21.5]},{position:[40,31.5]},{position:[60,21.5]},{position:[60,31.5]}],door:{position:[95,1],locks:6}}),Levels.push({camera:{fixedVertical:!0},floors:[{position:[0,0],width:100,height:1},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1},{position:[0,10],width:90,height:1},{position:[10,20],width:90,height:1},{position:[45,43],width:8,height:1},{position:[90,30],width:4,height:1},{position:[70,40],width:4,height:1},{position:[9,44],width:3,height:1},{position:[25,44],width:4,height:1}],player:{position:[3,1]},keys:[{position:[10,45.5]},{position:[97,38.5]}],door:{position:[47,44],locks:2},lavas:[{position:[1,29],width:75,height:6},{position:[75,31],width:5,height:4},{position:[11,19],width:88,height:1},{position:[11,11],width:12,height:2},{position:[51,11],width:10,height:2},{position:[1,11],width:1,height:20},{position:[98,1],width:1,height:19},{position:[31,1],width:10,height:2},{position:[33,1],width:6,height:4},{position:[71,1],width:10,height:2},{position:[73,1],width:6,height:4},{position:[1,1],width:1,height:9},{position:[1,9],width:22,height:1},{position:[95,1],width:3,height:3},{position:[90,21],width:9,height:9},{position:[85,21],width:9,height:5},{position:[51,9],width:10,height:1}]}),Levels.push({camera:{fixedVertical:!0},floors:[{position:[0,0],width:10,height:10},{position:[90,0],width:10,height:10},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1},{position:[20,15],width:3,height:1},{position:[33,25],width:3,height:1},{position:[45,15],width:3,height:1},{position:[70,0],width:1,height:30},{position:[70,30],width:1,height:1},{position:[80,20],width:1,height:1}],fireWheels:[{position:[70,30],length:10,speed:1}],lavas:[{position:[10,0],width:80,height:8}],player:{position:[1,10]},keys:[{position:[55,37.5]},{position:[46,16.5]},{position:[70,40.5]}],door:{position:[95,10],locks:3}}),Levels.push({camera:{fixedVertical:!0},entities:[{position:[0,44],width:10,height:1,type:"Floor"},{position:[15,40],width:1,height:1,type:"Floor"},{position:[25,35],width:1,height:1,type:"Floor"},{position:[35,30],width:1,height:1,type:"Floor"},{position:[45,25],width:1,height:1,type:"Floor"},{position:[55,30],width:1,height:1,type:"Floor"},{position:[65,35],width:1,height:1,type:"Floor"},{position:[75,40],width:1,height:1,type:"Floor"},{position:[80,43],width:20,height:1,type:"Floor"},{id:333,position:[10,0],width:70,height:45,type:"Lava"},{position:[10,0],width:1,height:45,type:"Floor"},{position:[80,0],width:1,height:43,type:"Floor"}],paths:[{nodes:[{position:[0,25]},{position:[0,0]}],loop:!0,speed:5,width:1,height:1,attached:333}],floors:[{position:[0,0],width:100,height:1},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1}],player:{position:[2,45]},keys:[{position:[15.25,41.5]},{position:[25.25,36.5]},{position:[35.25,31.5]},{position:[45.25,26.5]},{position:[55.25,31.5]},{position:[65.25,36.5]}],door:{position:[95,44],locks:6}}),Levels.push({entities:[{type:"Shoot",width:1,height:1,position:[25,50],speed:40,delay:1,timer:1,direction:[1,-1]},{type:"Shoot",width:1,height:1,position:[0,50],speed:40,delay:1,timer:1,direction:[1,-1]},{type:"Shoot",width:1,height:1,position:[75,50],speed:40,delay:1,timer:1,direction:[-1,-1]},{type:"Shoot",width:1,height:1,position:[99,50],speed:40,delay:1,timer:1,direction:[-1,-1]},{type:"Shoot",width:1,height:1,position:[0,1],speed:40,delay:1,timer:1,direction:[1,0]},{type:"Shoot",width:1,height:1,position:[99,1],speed:40,delay:1,timer:1,direction:[-1,0]}],floors:[{position:[0,0],width:100,height:1},{position:[50,25],width:1.25,height:1},{position:[0,0],width:1,height:50},{position:[99,0],width:1,height:50},{position:[0,50],width:100,height:1}],player:{position:[50,25]},keys:[{position:[1.25,1.5]},{position:[98.25,1.5]}],door:{position:[48,1],locks:2}}),Levels.push({entities:[{type:"Spring",position:[25,2],width:3,height:1},{type:"Spring",position:[49,2],width:3,height:1},{type:"Spring",position:[72,2],width:3,height:1},{type:"Shoot",position:[35,25],width:1,height:1,delay:2,timer:0,speed:10,direction:[0,-1]},{type:"Shoot",position:[64,25],width:1,height:1,delay:2,timer:0,speed:10,direction:[0,-1]},{type:"Shoot",position:[35,0],width:1,height:1,delay:2,timer:0,speed:10,direction:[0,1]},{type:"Shoot",position:[64,0],width:1,height:1,delay:2,timer:0,speed:10,direction:[0,1]},{type:"Shoot",position:[64,25],width:3,height:.75,delay:1.5,timer:0,speed:10,direction:[1,0],collision:COLLISION.COLLIDES,draw:"Floor"},{type:"Lava",position:[-100,-10],width:400,height:12},{type:"Lava",position:[25,24],width:50,height:1},{type:"Lava",position:[-200,-10],width:100,height:200},{type:"Lava",position:[200,-10],width:100,height:200},{type:"Rotate",width:5,height:1,position:[-25,25],distanceFromOrigin:20,angle:0,offset:[0,0],speed:1},{type:"Rotate",width:5,height:1,position:[-25,25],distanceFromOrigin:20,angle:Math.PI,offset:[0,0],speed:1},{type:"Rotate",width:5,height:1,position:[-25,25],distanceFromOrigin:20,angle:Math.PI/2,offset:[0,0],speed:1},{type:"Rotate",width:5,height:1,position:[-25,25],distanceFromOrigin:20,angle:3*Math.PI/2,offset:[0,0],speed:1},{type:"Rotate",width:3,height:1,position:[-75,25],distanceFromOrigin:10,angle:0,offset:[0,0],speed:2},{type:"Rotate",width:3,height:1,position:[-75,25],distanceFromOrigin:10,angle:Math.PI,offset:[0,0],speed:2},{type:"Lava",position:[100,25],width:5,height:2},{type:"Lava",position:[125,25],width:5,height:2},{type:"Lava",position:[150,25],width:5,height:2},{type:"Lava",position:[175,25],width:5,height:2}],floors:[{position:[50,25],width:1,height:25},{position:[25,25],width:50,height:1},{position:[-25,50],width:225,height:1}],player:{position:[45,26]},keys:[{position:[55,26.5]},{position:[-75,25]},{position:[185,51.5]},{position:[185,26.5]}],door:{position:[45,26],locks:4}});var AudioContext=window.AudioContext||window.webkitAudioContext,scale={C0:16.35,Cs0:17.32,D0:18.35,Ds0:19.45,Ef0:19.45,E0:20.6,F0:21.83,Fs0:23.12,G0:24.5,Gs0:25.96,A0:27.5,As0:29.14,Bf0:29.14,B0:30.87,C1:32.7,Cs1:34.65,D1:36.71,Ds1:38.89,Ef1:38.89,E1:41.2,F1:43.65,Fs1:46.25,G1:49,Gs1:51.91,A1:55,As1:58.27,Bf1:58.27,B1:61.74,C2:65.41,Cs2:69.3,D2:73.42,Ds2:77.78,Ef2:77.78,E2:82.41,F2:87.31,Fs2:92.5,G2:98,Gs2:103.83,A2:110,As2:116.54,Bf2:116.54,B2:123.47,C3:130.81,Cs3:138.59,D3:146.83,Ds3:155.56,Ef3:155.56,E3:164.81,F3:174.61,Fs3:185,G3:196,Gs3:207.65,A3:220,As3:233.08,Bf3:233.08,B3:246.94,C4:261.63,Cs4:277.18,D4:293.66,Ds4:311.13,Ef4:311.13,E4:329.63,F4:349.23,Fs4:369.99,G4:392,Gs4:415.3,A4:440,As4:466.16,Bf4:466.16,B4:493.88,C5:523.25,Cs5:554.37,D5:587.33,Ds5:622.25,Ef5:622.25,E5:659.25,F5:698.46,Fs5:739.99,G5:783.99,Gs5:830.61,A5:880,As5:932.33,Bf5:932.33,B5:987.77,C6:1046.5,Cs6:1108.73,D6:1174.66,Ds6:1244.51,Ef6:1244.51,E6:1318.51,F6:1396.91,Fs6:1479.98,G6:1567.98,Gs6:1661.22,A6:1760,As6:1864.66,Bf6:1864.66,B6:1975.53,C7:2093,Cs7:2217.46,D7:2349.32,Ds7:2489.02,Ef7:2489.02,E7:2637.02,F7:2793.83,Fs7:2959.96,G7:3135.96,Gs7:3322.44,A7:3520,As7:3729.31,Bf7:3729.31,B7:3951.07,C8:4186.01,Cs8:4434.92,D8:4698.63,Ds8:4978.03,Ef8:4978.03,E8:5274.04,F8:5587.65,Fs8:5919.91,G8:6271.93,Gs8:6644.88,A8:7040,As8:7458.62,Bf8:7458.62,B8:7902.13},Game={},gl=!1,DEBUG=!1;Game.renderCycle=1,Game.renderIncrement=1,Game.renderMaxCycle=1;const RENDER_EFFECTS={TRAIL:2,VELOCITY_TRAIL:4};Game.camera={translate:[0,0],rotate:0,scale:450};